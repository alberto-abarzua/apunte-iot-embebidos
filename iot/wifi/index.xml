<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Wifi on</title><link>https://alberto-abarzua.github.io/apunte-iot-embedidos/iot/wifi/</link><description>Recent content in Wifi on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 10 Aug 2023 15:05:40 +0000</lastBuildDate><atom:link href="https://alberto-abarzua.github.io/apunte-iot-embedidos/iot/wifi/index.xml" rel="self" type="application/rss+xml"/><item><title>Primera Conexión WiFi</title><link>https://alberto-abarzua.github.io/apunte-iot-embedidos/iot/wifi/esp_wifi/</link><pubDate>Thu, 10 Aug 2023 15:07:02 +0000</pubDate><guid>https://alberto-abarzua.github.io/apunte-iot-embedidos/iot/wifi/esp_wifi/</guid><description>Conexión WiFi con ESP32 # La ESP32 es una placa que tiene soporte nativo para WiFi. Esta guía te ayudará a entender y configurar la conexión WiFi en tu dispositivo ESP32.
Conectividad Inalámbrica: Permite que la ESP32 se conecte a redes locales sin cables, facilitando su integración en proyectos IoT. Modos Dual: Puede funcionar como un dispositivo conectado a una red (estación) o como un punto de acceso para otros dispositivos.</description></item><item><title>Cliente y Server TCP</title><link>https://alberto-abarzua.github.io/apunte-iot-embedidos/iot/wifi/ejemplo_tcp/</link><pubDate>Thu, 10 Aug 2023 15:06:52 +0000</pubDate><guid>https://alberto-abarzua.github.io/apunte-iot-embedidos/iot/wifi/ejemplo_tcp/</guid><description>Ahora veremos un ejemplo de un cliente y un servidor TCP, en este caso el cliente se conecta al servidor y le envia un mensaje, el servidor recibe el mensaje y lo imprime en la terminal.
Cliente TCP # // Agregar Imports de Primer Conexion WiFi #include &amp;#34;lwip/sockets.h&amp;#34; // Para sockets #define SERVER_IP &amp;#34;192.168.0.247&amp;#34; // IP del servidor (su computador o raspberry) #define SERVER_PORT 1234 // Agregar funciones de Primer Conexion WiFi (nv_init y wifi_init_sta) void socket_tcp(){ struct sockaddr_in server_addr; server_addr.</description></item></channel></rss>